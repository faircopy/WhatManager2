version: '3.2'

services:

    # MariaDB server, hosts the database that is backing the Django web app.
    db:
        container_name: '${COMPOSE_PROJECT_NAME}_db'
        image: mariadb:10.2
        networks:
            - app
        volumes:
            - type: volume
              source: db_data
              target: /var/lib/mysql
        environment:

            # Choose from the TZ column:
            # https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
            # e.g. America/Chicago, GMT, EST5EDT
            TZ: 'GMT'

            # Choose a secure password, document it.
            MYSQL_ROOT_PASSWORD: ''

        restart: unless-stopped

    # WhatManager Django web application, served by uWSGI.
    app:
        container_name: '${COMPOSE_PROJECT_NAME}_app'
        build:
            context: ../
            dockerfile: docker/app/Dockerfile
            args:

                # The user and group ID that uWSGI will run as.
                # Needs read/write access to the source directories below.
                UWSGI_UID: 1000
                UWSGI_GID: 1000

        image: wm_app
        networks:
            - app
            - internet
        volumes:
            - type: bind
              source: ./app/conf/settings.py
              target: /srv/wm/WhatManager2/settings.py
            - type: bind
              source: ./app/conf/bibliotik-settings.py
              target: /srv/wm/bibliotik/settings.py
            - type: bind
              source: ./app/conf/myanonamouse-settings.py
              target: /srv/wm/myanonamouse/settings.py
            - type: bind
              source: ./app/conf/qobuz2-settings.py
              target: /srv/wm/qobuz2/settings.py
            - type: volume
              source: static
              target: /mnt/static

            # Download directories to be made accessible to WhatManager.
            # You can have as many of these as you like.
            #
            # source: the original directory on the host.
            # target: the directory inside of the Docker container,
            #         you'll need to specify this at the /admin/ interface
            #         later.
            #
            # Transmission daemons must also have read/write access to the
            # 'target' directories below, available to them on the same path.
            # Transmission instances might even run on another pysical machine,
            # but the path must match. Shared storage can be used as well as
            # local storage.
            - type: bind
              source: '/mnt/music-dl'
              target: '/mnt/music-dl'
            - type: bind
              source: '/mnt/book-dl'
              target: '/mnt/book-dl'

        depends_on:
            - db
        restart: unless-stopped

    # Nginx reverse proxy.
    web:
        container_name: '${COMPOSE_PROJECT_NAME}_web'
        image: nginx:alpine
        networks:
            - internet
            - app
        environment:
            - COMPOSE_PROJECT_NAME
        ports:

            # 'published' is the port the service will be exposed on,
            # the port that's available to the outside world.
            - target: 80
              published: 8080
              protocol: tcp

        volumes:
            - type: bind
              source: ./web/conf
              target: /mnt/config
              read_only: true
            - type: bind
              source: ./web/log
              target: /var/log/nginx
            - type: volume
              source: static
              target: /mnt/static
              read_only: true
        depends_on:
            - app
        restart: unless-stopped
        command: >
            sh -c 'envsubst
            < /mnt/config/default.conf.template
            > /etc/nginx/conf.d/default.conf
            && nginx -g "daemon off;"'

    # Request a synchronization periodically from the app.
    sync:
        container_name: '${COMPOSE_PROJECT_NAME}_sync'
        build: sync
        image: wm_sync
        networks:
            - app
        environment:

            # Profile update interval, parameter of the 'sleep' command.
            SYNC_INTERVAL: '15m'

            # 'wm_web' in this example is the container name of the
            # 'web' service. It's resolved to an IP via Docker Embedded
            # DNS.  /wm is the path where WhatManager is hosted.
            SYNC_URL: 'http://${COMPOSE_PROJECT_NAME}_web/wm/json/sync'

            # User name and password to request torrent client status and
            # profile synchronization from the app. This might be your Django
            # superuser, or you can choose to create a dedicated user for this
            # later on.
            SYNC_USER: 'user'
            SYNC_PASS: ''

        depends_on:
            - app
            - web
        restart: unless-stopped

    # Transmission daemon instance.
    red1:
        container_name: '${COMPOSE_PROJECT_NAME}_red1'
        image: dperson/transmission
        networks:
            - internet
        volumes:
            - type: volume
              source: red1
              target: /var/lib/transmission-daemon
            - type: bind
              source: /mnt/music-dl
              target: /mnt/music-dl
        ports:
            - 9001:9001/tcp
            - 20001:20001/tcp
            - 20001:20001/udp

        # For a list of all available options see:
        # https://github.com/transmission/transmission/wiki/Editing-Configuration-Files#options
        environment:
            TRUSER: 'transmission'
            TRPASSWD: '<transmission-password>'
            USERID: 1000
            GROUPID: 1000
            TZ: '<timezone>'
            TR_RPC_PORT: 9001
            TR_PEER_PORT: 20001
            TR_BLOCKLIST_URL: 'http://127.0.0.1'
            TR_MAX_PEERS_GLOBAL: 300
            TR_DHT_ENABLED: 'false'
            TR_PEX_ENABLED: 'false'
            TR_RATIO_LIMIT_ENABLED: 'false'
            TR_DOWNLOAD_DIR: '/mnt/music-dl'
            TR_INCOMPLETE_DIR_ENABLED: 'false'
            TR_SPEED_LIMIT_DOWN: 1024
            TR_SPEED_LIMIT_DOWN_ENABLED: 'true'
            TR_SPEED_LIMIT_UP: 1024
            TR_SPEED_LIMIT_UP_ENABLED: 'true'
            TR_ALT_SPEED_DOWN: 2048
            TR_ALT_SPEED_UP: 2048
            TR_ALT_SPEED_TIME_ENABLED: 'false'
            TR_ALT_SPEED_TIME_BEGIN: 420 #  7:00, minutes from midnight
            TR_ALT_SPEED_TIME_END: 1380  # 23:00
            TR_ALT_SPEED_TIME_DAY: 127   # All days: 127, Weekdays: 62, Weekends: 65
            TR_START_ADDED_TORRENTS: 'false'
            TR_DOWNLOAD_QUEUE_ENABLED: 'true'
            TR_DOWNLOAD_QUEUE_SIZE: 2
            TR_SCRAPE_PAUSED_TORRENTS_ENABLED: 'false'

        restart: unless-stopped

networks:
    internet:
    app:
        internal: true

volumes:
    db_data:
    static:
    red1:
